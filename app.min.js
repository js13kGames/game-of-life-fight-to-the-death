function getEl(e){return document.querySelector(e)}function init(e){generation=0,cellnum={},oranges=0,greens=0,dead=0,bothtribes=+form.bothtribes.value,maxGen=+form.gennum.value,S=Math.floor(windowW/colN),rowN=Math.floor(windowH/S),W=S*colN,H=S*rowN,dW=(windowW-W)/2,dH=(windowH-H)/2,colHN=(colN-1)/2,halfW=S*colHN,maxLС=getCellsNumber(P),informer=new Informer,game.width=W,game.height=H,grid.width=W,grid.height=H,game.style.left=dW+"px",game.style.top=dH+"px",grid.style.left=dW+"px",grid.style.top=dH+"px",pane.style.top=dH+"px",pane.style.right=dW+"px",pane.style.width=halfW+"px",pane.style.height=H+"px",form.live.value=maxLС,bothtribes?(orangeArr=getEmptyArray(colHN,rowN),greenArr=getEmptyArray(colHN,rowN),cellnum.greens=0,cellnum.oranges=0):(orangeArr=getEmptyArray(colHN,rowN),greenArr=getTribeArray(colHN,rowN,2),cellnum=checkCellNum(greenArr)),drawStage(orangeArr,"left"),gridOn&&drawGrid(S,colN,rowN,!0),e&&remClass(pane,"hidden")}function getCellsNumber(e){return Math.floor(colHN*rowN*e)}function Informer(){var e=this,r=W/2,n=H/8,a=n/1.2,t=(W-r)/2,o=(H-n)/2,i=t+r/2,l=i-n/4,g=i+n/4,s=o+n/2;e.msgOn=!1,e.drawScore=function(e){gс.save(),gс.font=a+"px fantasy",gс.textBaseline="middle",gс.fillStyle="#5A1F00",gс.lineWidth=5,gс.strokeStyle="#FDE792",gс.fillRect(t,o,r,n),gс.strokeRect(t,o,r,n),gс.fillStyle="#D1570D",gс.textAlign="end",gс.fillText(e.oranges,l,s),gс.textAlign="center",gс.fillStyle="#FDE792",gс.fillText(":",i,s),gс.textAlign="start",gс.fillStyle="#477725",gс.fillText(e.greens,g,s),gс.restore()},e.drawMessage=function(r){e.msgOn=!0,gс.save(),gс.font=a/2+"px fantasy";var t=gс.measureText(r).width,i=(W-t)/2;gс.textBaseline="middle",gс.fillStyle="#5A1F00",gс.lineWidth=5,gс.strokeStyle="#FDE792",gс.fillRect(i,o,t+n/2,n),gс.strokeRect(i,o,t+n/2,n),gс.fillStyle="#FDE792",gс.textAlign="start",gс.fillText(r,i+n/4,s),gс.restore()}}function getEmptyArray(e,r){for(var n,a=[],t=0;e>t;t++)for(a[t]=new Array(r),n=0;r>n;)a[t][n++]=0;return a}function getTribeArray(e,r,n){for(var a,t=getInitArray(e,r,n),o=[];t.length;)a=t.splice(0,r),o.push(a);return o}function getInitArray(e,r,n){var a,t,o=e*r-maxLС,i=new Array(maxLС),l=new Array(o);for(t=0;maxLС>t;)i[t++]=n;for(t=0;o>t;)l[t++]=0;return a=i.concat(l),shuffle(a)}function joinArrays(e,r){for(var n=e[0].length,a=new Array(n),t=0;n>t;)a[t++]=0;return e.concat([a],r)}function shuffle(e){for(var r,n=e.length;n;)r=Math.floor(Math.random()*n--),e[n]=[e[r],e[r]=e[n]][0];return e}function gameInit(){addClass(pane,"hidden"),bothtribes?(gridOn&&drawGrid(S,colN,rowN,"both"),drawStage(greenArr,"right"),drawStage(orangeArr,"left"),informer.drawMessage("Hit the spacebar when you're done."),mTimeout=setTimeout(function(){informer.msgOn=!1,gridOn?gridOn&&drawGrid(S,colN,rowN,"both"):gс.clearRect(0,0,W,H)},1e3)):startGame(2e3)}function startGame(e){bf1=getEmptyArray(colN,rowN),bf2=joinArrays(orangeArr,greenArr),gridOn&&drawGrid(S,colN,rowN),drawStage(bf2),mTimeout=setTimeout(function(){showMustGoOn()},e)}function drawStage(e,r){var n,a=e.length,t=0,o=0;for("right"===r&&(o=halfW+S);a>t;t++)for(n=0;rowN>n;n++)drawCell(o+t*S,n*S,e[t][n])}function drawGrid(e,r,n,a){var t,o,i=a?halfW:W,l=a?colHN+1:r+1,g=0;for(gс.strokeStyle=CLRS[3],gс.clearRect(0,0,W,H);l>g;g++)t=g*e,drawLine(t,0,t,H);for(g=0;n+1>g;g++)t=g*e,drawLine(0,t,i,t);if("both"===a){for(o=halfW+S,g=0;l>g;g++)t=o+g*e,drawLine(t,0,t,H);for(g=0;n+1>g;g++)t=g*e,drawLine(o,t,o+i,t)}}function drawLine(e,r,n,a){gс.beginPath(),gс.moveTo(e,r),gс.lineTo(n,a),gс.stroke()}function drawCell(e,r,n){c.fillStyle=CLRS[n],c.fillRect(e,r,S,S)}function showMustGoOn(){return informer.msgOn&&(clearTimeout(mTimeout),informer.msgOn=!1,gridOn?drawGrid(S,colN,rowN):gс.clearRect(0,0,W,H)),bothtribes?(bothtribes=!bothtribes,void startGame(500)):(animation=!animation,void(animation&&requestAnimationFrame(nextGen)))}function nextGen(){for(var e,r=0;colN>r;r++)for(e=0;rowN>e;e++)bf1[r][e]=calcState(r,e),drawCell(r*S,e*S,bf1[r][e]);bf1=[bf2,bf2=bf1][0],generation++,animation?generation>=maxGen?(animation=!animation,displayResults()):(generation%25===0&&(animation=checkCellNum(bf1,!0),animation||displayResults()),requestAnimationFrame(nextGen)):generation>=maxGen&&displayResults()}function checkState(){cellnum=checkCellNum(bf2),informer.drawScore(cellnum)}function displayResults(){cellnum=checkCellNum(bf2),informer.drawScore(cellnum)}function checkCellNum(e,r){for(var n,a=e.length,t=0,o={dead:0,oranges:0,greens:0};a>t;t++)for(n=0;rowN>n;n++)e[t][n]?1===e[t][n]?o.oranges++:o.greens++:o.dead++;return r?!!o.oranges&&!!o.greens:o}function calcState(e,r){for(var n,a=0>e-1?colN-1:e-1,t=e+1>colN-1?0:e+1,o=0>r-1?rowN-1:r-1,i=r+1>rowN-1?0:r+1,l=[bf2[a][o],bf2[a][r],bf2[a][i],bf2[e][o],bf2[e][i],bf2[t][o],bf2[t][r],bf2[t][i]],g=0,s=0,c=0,f=0;8>f;f++)l[f]?1===l[f]?s++:c++:g++;return n=s+c,bf2[e][r]?2>n||n>3?0:bf2[e][r]:3!==n?0:c>s?2:s>c?1:Math.floor(Math.random()+.5)}function generateArr(){bothtribes?(orangeArr=getTribeArray(colHN,rowN,1),greenArr=getTribeArray(colHN,rowN,2),cellnum=checkCellNum(greenArr),drawStage(greenArr,"right"),drawStage(orangeArr,"left"),gridOn&&drawGrid(S,colN,rowN,"both")):(orangeArr=getTribeArray(colHN,rowN,1),drawStage(orangeArr,"left"),cellnum.oranges=checkCellNum(orangeArr).oranges,gridOn&&drawGrid(S,colN,rowN,"left"))}function resetArr(){bothtribes?(orangeArr=getEmptyArray(colHN,rowN),greenArr=getEmptyArray(colHN,rowN),cellnum.greens=0,cellnum.oranges=0,drawStage(greenArr,"right"),drawStage(orangeArr,"left"),gridOn&&drawGrid(S,colN,rowN,"both")):(orangeArr=getEmptyArray(colHN,rowN),drawStage(orangeArr,!0),gridOn&&drawGrid(S,colN,rowN,"left"))}function applyConfig(){colN=+form.colnum.value,P=+form.popdens.value,maxGen=+form.gennum.value,gridOn=+form.showgrid.value,init()}function onSpanMouseUp(e){var r=document.getElementById(e.target.id.replace("nav","pane")),n=0;if(hasClass(e.target,"inactive-btn")){for(;n<navbtns.length;n++)addClass(navbtns[n],"inactive-btn");for(remClass(e.target,"inactive-btn"),n=0;n<panels.length;n++)addClass(panels[n],"hidden");remClass(r,"hidden")}}function onCanvasMouseUp(){dragging=!1}function onCanvasMouseDown(e){dragging=!0,onCanvasMouseMove(e)}function onCanvasMouseMove(e){if(dragging&&!animation){var r=getPointerPos(e.target,e),n=Math.floor(r.x/S),a=Math.floor(r.y/S);r.x<halfW?(cache.oranges.i!==n||cache.oranges.j!==a)&&(orangeArr[n][a]=orangeArr[n][a]?0:1,orangeArr[n][a]?(cellnum.oranges++,cellnum.oranges>maxLС&&(cellnum.oranges--,orangeArr[n][a]=0)):cellnum.oranges--,cache.oranges.i=n,cache.oranges.j=a,drawStage(orangeArr,"left")):bothtribes&&r.x>halfW+S&&(n-=colHN+1,(cache.greens.i!==n||cache.greens.j!==a)&&(greenArr[n][a]=greenArr[n][a]?0:2,greenArr[n][a]?(cellnum.greens++,cellnum.greens>maxLС&&(cellnum.greens--,greenArr[n][a]=0)):cellnum.greens--,cache.greens.i=n,cache.greens.j=a,drawStage(greenArr,"right")))}}function getCellCoord(e){Math.round(e.x/S),Math.round(e.y/S)}function hasClass(e,r){return(" "+e.className+" ").indexOf(" "+r+" ")>-1}function addClass(e,r){hasClass(e,r)||(e.className+=" "+r)}function remClass(e,r){e.className=e.className.replace(" "+r,"")}function getPointerPos(e,r){var n=e.getBoundingClientRect();return{x:r.pageX-n.left,y:r.pageY-n.top}}function pointInRect(e,r){return inRange(e.x,r.x,r.x+r.w)&&inRange(e.y,r.y,r.y+r.h)}function inRange(e,r,n){return e>=Math.min(r,n)&&e<=Math.max(r,n)}var colN=51,P=.5,S,rowN,orangeArr,playerLC,greenArr,enemyLC,battleArr1,battleArr2,maxLС,W,H,dW,dH,halfW,colHN,maxGen,CLRS=["#5A1F00","#D1570D","#477725","rgba(0,0,0,1)"],animation=!1,gridOn=!0,cache={greens:{i:1e3,j:1e3},oranges:{i:1e3,j:1e3}},mTimeout,bothtribes,dragging,cellnum,oranges,greens,dead,generation,game=getEl("#game"),grid=getEl("#grid"),pane=getEl("#pane"),apply=getEl("#apply"),rulesBtn=getEl("#nav-rules"),optionBtn=getEl("#nav-option"),navbtns=document.getElementsByClassName("btn"),panels=document.getElementsByClassName("panels"),form=document.forms[0],c=game.getContext("2d"),gс=grid.getContext("2d"),b=document.body,windowW=window.innerWidth,windowH=window.innerHeight,informer,battleArr1,battleArr2;b.onkeyup=function(e){switch(e.keyCode){case 32:showMustGoOn();break;case 27:animation||init(!0);break;case 39:animation||nextGen();break;case 37:animation||nextGen();break;case 38:animation||nextGen();break;case 40:animation||nextGen()}},b.onmouseup=function(e){if("SPAN"===e.target.nodeName)onSpanMouseUp(e);else if("CANVAS"===e.target.nodeName)onCanvasMouseUp(e);else if("DIV"===e.target.nodeName)switch(e.target.id){case"apply":applyConfig();break;case"start":gameInit();break;case"generate":generateArr();break;case"reset":resetArr();break;default:return!1}},grid.onmousedown=onCanvasMouseDown,grid.onmousemove=onCanvasMouseMove,init();
//# sourceMappingURL=data:application/json;base64,